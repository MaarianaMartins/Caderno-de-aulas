---
title: "Aula2 - importar dados e utilizar pacotes"
format: html
editor: visual
message: false 
warning: false
---

#Usar os dados de um pacote Para utilizar dados de dentro de um pacote especifico é necessário instalar aquela pacote para que possamos ter acesso aos dados. Você tem que ir na aba "packages" e instalar um novo pacote, procurando na barra de busca. Para usar os dados desse pacote é necessário conhecer a função e o que se quer especificar dentro desse pacote.

```{r}
library(agricolae)
dat <- data(corn)
```

```{r}
library(agridat)
```

A partir da abertura de dados de um pactoe, é necessário atribuir o seu valor a um objeto, para que depois possamos usar o objeto para trabalhar os valores. Neste exemplo da aula, usamos o objeto df1 para associar os valores da tabela dos dados multi_isolate do pacote escolhido e será a partir desse objeto "df1" que trabalharemos os dados.

```{r}
library(ec50estimator)
df1 <- multi_isolate
```

Para utilizar os pacotes presentes numa planilha externa ao programa, precisamos usar a biblioteca que utiliza essa função. Nesse caso, é a 'readxl', para essa função só podemos utilizar a planilha que está baixada no computador e está no mesmo local, na mesma pasta, que o arquivo da aula. Nesse caso, df2 vai ser a função escolhida para carregar e associar os valores do conjunto de dados. Pode usar também os dados de uma mesma planilha dentro daquele arquivo mas quando ela está em uma outra aba. Ex: planilha do excel com dados de "severidade", "incidência", comprimento"... Para abrir a planilha de incidência, usaria a função read_excel("dados-diversos.xlsx", sheet = "incidência").

```{r}
library(readxl)
df2 <- read_excel("dados-diversos.xlsx")
```

Para utilizar as planilhas que estãp em csv (separado por ;) precisamos fazer a utilização da biblioteca do tidyverse, que é o pacote que contém essa função.

```{r}
library(tidyverse)
df3 <- read_csv("dados-diversos.csv")
```

Podemos também utilizar a o link da planilha que está online, basta usar o pacote que abre a planilha google. A função que será utilizada para abrir a planilha é a gsheet2tbl.

```{r}
library(gsheet)
df4 <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
```

Para visualizar os dados, é necessário carregar o pacote responsável pela produção dos gráficos. A varíavel resposta que quer ser observada fica no eixo y. Quando abrir a função do ggplot abaixo do pipe, você deve escolher o que fica no eixo x e no y. O ggplot trabalha em camadas, então na primeira camada você trabalha o aestethic (visual), dai você vai adicionando as camadas com o que você quer adicionar/editar no gráfico. Dentro do geom_jitter você coloca os pontos de dispersão e consegue ajustar a distância que esses pontos vão estar um do outro e "organiza-os" no gráfico com a adição do comando "width". Quanto mais simétrico está o box, mais normal é a distribuição dos dados. Para colocar a escala do gráfico, você utiliza a função scale_y_continuous colocando o limite de intervalo entre (limits = c (0,20)). O número de quebras da escala do gráfico vai ser colocada com a função n.breaks.

```{r}
library(ggplot2)
g1 <- df4 %>%
  ggplot(aes(trat, comp)) +
  #geom_point() +
  geom_boxplot(outlier.colour = NA,
               fill = "pink") +
  geom_jitter(width = 0.05,
              color = "darkblue",
              shape = 2,
              size = 3)
g1 + theme_classic() +
  labs(x = "Tratamento",
       y = "Comprimento (mm)",
       title = "Meu primeiro boxplot",
       caption = "Fonte: Dados diversos") +
  scale_y_continuous(limits = c (0,20),
                     n.breaks = 10)
ggsave("plot1.png", bg = "white")
  #ylim(0,20)
#y.lim(0,20) também funciona para alterar a escala
```
