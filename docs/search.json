[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Saudações, seja muito bem-vindo!",
    "section": "",
    "text": "Olá, me Chamo Mariana Martins, esse é o site destinado ao meu caderno de aulas da disciplina FIP 606, por favor, sinta-se à vontade!\n\n\n\n\n\n\n\n\n\nSobre mim\nEngenheira Agrônoma pela Universidade Federal do Vale do São Francisco, campus de Ciências Agrárias. Atuei como estagiária voluntária no centro de recuperação de áreas degradadas (CRAD), voluntária no laboratório de fitopatologia e fui bolsista de iniciação científica do Conselho Nacional de Desenvolvimento Científico e Tecnológico (CNPq) de 08/2020 a 12/2022, trabalhando atributos de qualidade do solo, controle biológico e microrganismos promotores de crescimento vegetal, sob orientação do professor Bruno Coutinho Moreira. Atualmente sou aluna do mestrado em Fitopatologia (Capes 7) pela Universidade Federal de Viçosa - Campus Viçosa, e atuo no Laboratório de Manejo Integrado de Doenças (LAMID), sob orientação do professor Franklin Jackson Machado. |\n\n\n\n\n\n\n\n\n\n\nSobre esse site\nA proposta desse website é disponibilizar as aulas que foram ministradas na disciplina FIP 606 - Análise e Visualização de Dados em Fitopatologia, da Universidade Federal de Viçosa, pelo professor Emerson Medeiros Del Ponte.\nEspero que aproveite o conteúdo!!\n |"
  },
  {
    "objectID": "aula5.html",
    "href": "aula5.html",
    "title": "Aula 5- sumariza e criar gráficos",
    "section": "",
    "text": "#Sumarização de dados e apresentação deles Para carregar dados de uma planilha online é necessário abrir o pacote que está dentro da biblioteca gsheet, após isso usa a função gsheet2tbl para puxar os dados da planilha usando um link.\n\nlibrary (gsheet)\nns &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1092065531\")\n\nPrecisamos analisar os valores de média e mediana para entender melhor os dados antes de fazer a visualização deles com o uso do gráfico. Pode ser observado que os valores médio das provas 1 foram de 79,5 com uma mediana de 85,7 e um desvio padrão de 19. Sendo que os valores variavam entre 42,9 e 100 pontos. Para os valores médio das provas 2 foram de 79,26, com uma mediana de 84,37 e um desvio padrão de 19,70. Sendo que os valores variaram de 43,75 até 100 pontos.\n\nlibrary(tidyverse)\nns|&gt;\n  group_by(prova) |&gt; \n  summarise(nota_mean = mean(nota),\n            nota_med = median(nota),\n            nota_sd = sd(nota))\n\n# A tibble: 2 × 4\n  prova nota_mean nota_med nota_sd\n  &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n1     1      79.5     85.7    19.0\n2     2      79.3     84.4    19.7\n\n\nPara visualizar os dados e comunicá-los em forma de gráfico é necessário abrir a bibilioteca do ggthemes, após isso escolheremos o tipo de gráfico que queremos, nesse primeiro momento, será escolhido o gráfico de histrograma.\n\nlibrary (ggthemes)\nns |&gt;\nggplot (aes(x= nota)) +\ngeom_histogram(bins = 5, fill = \"darkred\", color = \"white\")+\n  facet_wrap(~prova) +\n  scale_fill_colorblind() +\n  theme_bw() +\n  labs(x = \"Nota\",\n       y = \"Frequency\")\n\n\n\n\n\n\n\n\n#Separação dos dados para criar subconjunto\n\nlibrary(ggplot2)\nnotas1 &lt;- ns |&gt;\n  select(prova, nota) |&gt;\n  filter(prova == 1)\nnotas1\n\n# A tibble: 22 × 2\n   prova  nota\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     1  71.4\n 2     1  92.9\n 3     1  85.7\n 4     1  42.9\n 5     1 100  \n 6     1  85.7\n 7     1 100  \n 8     1  57.1\n 9     1 100  \n10     1  71.4\n# ℹ 12 more rows\n\nnotas2 &lt;- ns |&gt;\n  select(prova, nota) |&gt;\n  filter(prova == 2)\nnotas2\n\n# A tibble: 22 × 2\n   prova  nota\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     2  81.2\n 2     2  68.8\n 3     2  87.5\n 4     2  87.5\n 5     2  87.5\n 6     2 100  \n 7     2 100  \n 8     2 100  \n 9     2 100  \n10     2  43.8\n# ℹ 12 more rows\n\nnotas1 |&gt;\n  count (nota)\n\n# A tibble: 7 × 2\n   nota     n\n  &lt;dbl&gt; &lt;int&gt;\n1  42.9     2\n2  57.1     2\n3  64.3     2\n4  71.4     4\n5  85.7     3\n6  92.9     3\n7 100       6\n\nnotas2|&gt;\n  count(nota)\n\n# A tibble: 6 × 2\n   nota     n\n  &lt;dbl&gt; &lt;int&gt;\n1  43.8     3\n2  56.2     1\n3  68.8     5\n4  81.2     2\n5  87.5     4\n6 100       7\n\n\n#Criação de gráficos separados para cada subconjunto criado\n\nlibrary(ggthemes)\nnotas1 |&gt;\n  ggplot(aes(x = nota)) +\n  geom_histogram(bins = 5, fill = \"darkblue\", color = \"white\") +\n  scale_fill_colorblind() +\n  theme_bw() +\n  labs(title = \"Prova 1\", \n        x = \"Nota\", \n        y= \"Frequency\")\n\n\n\n\n\n\n\nnotas1\n\n# A tibble: 22 × 2\n   prova  nota\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     1  71.4\n 2     1  92.9\n 3     1  85.7\n 4     1  42.9\n 5     1 100  \n 6     1  85.7\n 7     1 100  \n 8     1  57.1\n 9     1 100  \n10     1  71.4\n# ℹ 12 more rows\n\nnotas2 |&gt;\n  ggplot(aes(x = nota)) +\n  geom_histogram(bins = 5, fill = \"darkred\",color = \"white\") +\n  scale_fill_colorblind() +\n  theme_bw() +\n  labs (title = \"Prova 2\",\n        x = \"Nota\", \n        y= \"Frequency\")\n\n\n\n\n\n\n\nnotas2\n\n# A tibble: 22 × 2\n   prova  nota\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     2  81.2\n 2     2  68.8\n 3     2  87.5\n 4     2  87.5\n 5     2  87.5\n 6     2 100  \n 7     2 100  \n 8     2 100  \n 9     2 100  \n10     2  43.8\n# ℹ 12 more rows\n\n\n#Para juntar os gráficos de dois subconjuntos em um único gráfico\n\np1 &lt;- notas1 |&gt;\n  ggplot(aes(x = nota)) +\n  geom_histogram(bins = 5, fill = \"blue\", color = \"White\")  +\n  theme_bw() +\n  labs(title = \"Prova 1\", \n       x = \"Nota\", \n       y = \"Frequency\") +\n  geom_vline(xintercept = 79.54545, linetype = \"dashed\", color = \"red\", size = 1) +\n  ylim(0,10)\n\np2 &lt;- notas2 |&gt; \n  ggplot(aes(x = nota)) +\n  geom_histogram(bins = 5, fill = \"green\", color = \"White\") + \n  theme_bw() +\n  labs(title = \"Prova 2\",\n       x = \"Nota\",\n       y = \"\") +\n  geom_vline(xintercept = 79.26136, linetype = \"dashed\", color = \"red\", size = 1) +\n  ylim(0,10)\n\nlibrary(patchwork)\n(p1 + p2) +\n  plot_layout(guides = \"collect\",\n            axes = \"collect\") \n\n\n\n\n\n\n\n\n#A partir da visualização dos dados, é possível criar quantos gráficos quiser e também se aplicarem ao conjuntos de valores. Para o próximo gráfico, iremos criar um gráfico de boxplot.\n\nlibrary(ggplot2)\nns |&gt; \n  ggplot(aes(factor (prova), nota)) + \n  geom_boxplot(fill = \"purple\") +\n  geom_jitter(width = 0.05)+\n  theme_bw() +\n  labs(x = \"Frequency\",\n       y = \"Provas\")\n\n\n\n\n\n\n\n\n#Quando se tem poucas amotras e tratamentos, pode-se usar o gráfico de pontos com a utilização de um intervalo de confiança para detalhar o intervalo em que as médias utilizadas se encontram.\n\nlibrary(ggplot2)\nns |&gt;\n  group_by(prova) |&gt;\n  summarise(nota_mean = mean(nota),\n            nota_sd = sd(nota)) |&gt;\n  ggplot(aes(factor(prova), nota_mean, color =prova)) +\n  geom_point(size = 3) +\n  geom_errorbar(aes(ymin = nota_mean - nota_sd, \n                    ymax = nota_mean + nota_sd),\n                width = 0.1) +\n  theme_bw()+\n  theme(legend.position = \"none\") +\n  ylim(0,100) +\n  labs(x = \"Prova\",\n       y= \"Frequency\")"
  },
  {
    "objectID": "aula2_.html",
    "href": "aula2_.html",
    "title": "Aula2 - importar dados e utilizar pacotes",
    "section": "",
    "text": "#Usar os dados de um pacote Para utilizar dados de dentro de um pacote especifico é necessário instalar aquela pacote para que possamos ter acesso aos dados. Você tem que ir na aba “packages” e instalar um novo pacote, procurando na barra de busca. Para usar os dados desse pacote é necessário conhecer a função e o que se quer especificar dentro desse pacote.\n\nlibrary(agricolae)\ndat &lt;- data(corn)\n\n\nlibrary(agridat)\n\nA partir da abertura de dados de um pactoe, é necessário atribuir o seu valor a um objeto, para que depois possamos usar o objeto para trabalhar os valores. Neste exemplo da aula, usamos o objeto df1 para associar os valores da tabela dos dados multi_isolate do pacote escolhido e será a partir desse objeto “df1” que trabalharemos os dados.\n\nlibrary(ec50estimator)\ndf1 &lt;- multi_isolate\n\nPara utilizar os pacotes presentes numa planilha externa ao programa, precisamos usar a biblioteca que utiliza essa função. Nesse caso, é a ‘readxl’, para essa função só podemos utilizar a planilha que está baixada no computador e está no mesmo local, na mesma pasta, que o arquivo da aula. Nesse caso, df2 vai ser a função escolhida para carregar e associar os valores do conjunto de dados. Pode usar também os dados de uma mesma planilha dentro daquele arquivo mas quando ela está em uma outra aba. Ex: planilha do excel com dados de “severidade”, “incidência”, comprimento”… Para abrir a planilha de incidência, usaria a função read_excel(“dados-diversos.xlsx”, sheet = “incidência”).\n\nlibrary(readxl)\ndf2 &lt;- read_excel(\"dados-diversos.xlsx\")\n\nPara utilizar as planilhas que estãp em csv (separado por ;) precisamos fazer a utilização da biblioteca do tidyverse, que é o pacote que contém essa função.\n\nlibrary(tidyverse)\ndf3 &lt;- read_csv(\"dados-diversos.csv\")\n\nPodemos também utilizar a o link da planilha que está online, basta usar o pacote que abre a planilha google. A função que será utilizada para abrir a planilha é a gsheet2tbl.\n\nlibrary(gsheet)\ndf4 &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137\")\n\nPara visualizar os dados, é necessário carregar o pacote responsável pela produção dos gráficos. A varíavel resposta que quer ser observada fica no eixo y. Quando abrir a função do ggplot abaixo do pipe, você deve escolher o que fica no eixo x e no y. O ggplot trabalha em camadas, então na primeira camada você trabalha o aestethic (visual), dai você vai adicionando as camadas com o que você quer adicionar/editar no gráfico. Dentro do geom_jitter você coloca os pontos de dispersão e consegue ajustar a distância que esses pontos vão estar um do outro e “organiza-os” no gráfico com a adição do comando “width”. Quanto mais simétrico está o box, mais normal é a distribuição dos dados. Para colocar a escala do gráfico, você utiliza a função scale_y_continuous colocando o limite de intervalo entre (limits = c (0,20)). O número de quebras da escala do gráfico vai ser colocada com a função n.breaks.\n\nlibrary(ggplot2)\ng1 &lt;- df4 %&gt;%\n  ggplot(aes(trat, comp)) +\n  #geom_point() +\n  geom_boxplot(outlier.colour = NA,\n               fill = \"pink\") +\n  geom_jitter(width = 0.05,\n              color = \"darkblue\",\n              shape = 2,\n              size = 3)\ng1 + theme_classic() +\n  labs(x = \"Tratamento\",\n       y = \"Comprimento (mm)\",\n       title = \"Meu primeiro boxplot\",\n       caption = \"Fonte: Dados diversos\") +\n  scale_y_continuous(limits = c (0,20),\n                     n.breaks = 10)\n\n\n\n\n\n\n\nggsave(\"plot1.png\", bg = \"white\")\n  #ylim(0,20)\n#y.lim(0,20) também funciona para alterar a escala"
  },
  {
    "objectID": "aula1_quarto.html",
    "href": "aula1_quarto.html",
    "title": "Aula 1 - introdução ao R",
    "section": "",
    "text": "#Aprendendo a atribuir valores\n\nA &lt;- 1\nB &lt;- 2\nC &lt;- 3\n\nvalores adiconados aqui, irão aparecer como objetos com dados #uso de dois ** para deixar em negrito exemplo #uso de um * deixa ele em itálico exemplo\n#Para criar um data.frame\nIMPORTANTE Tem que ser o mesmo número de linhas e vetores para a criação do dataframe que funciona como uma espécie de tabela.\n\ndf &lt;- data.frame(A, B)\n\n#Como pedir ajuda\nAparece a resposta do que a função faz na aba de ajuda “help” Além da opção apresentada no chunck pode pedir ajuda da seguinte forma: ?função.\n\nhelp(data.frame)\n\n#Também podemos fazer operações Pode fazer operações com os número e também com os vetores com valores atribuidos. O R funciona basicamente como uma calculadora inteligente, portanto, pode ser feita operações matemáticas básicas e complexas.\n\n1 + 1\n\n[1] 2\n\n2/3\n\n[1] 0.6666667\n\n3*4\n\n[1] 12\n\nA + B\n\n[1] 3\n\nC * A\n\n[1] 3\n\nB / C\n\n[1] 0.6666667\n\n\n#Usado para confirmar a informação colocada\nA função ‘echo:false’ desativa o código de impressão (somente a resposta aparece no console).\n\n\n[1] 4"
  },
  {
    "objectID": "aula1_quarto.html#running-code",
    "href": "aula1_quarto.html#running-code",
    "title": "Aula 1 - introdução ao R",
    "section": "",
    "text": "#Aprendendo a atribuir valores\n\nA &lt;- 1\nB &lt;- 2\nC &lt;- 3\n\nvalores adiconados aqui, irão aparecer como objetos com dados #uso de dois ** para deixar em negrito exemplo #uso de um * deixa ele em itálico exemplo\n#Para criar um data.frame\nIMPORTANTE Tem que ser o mesmo número de linhas e vetores para a criação do dataframe que funciona como uma espécie de tabela.\n\ndf &lt;- data.frame(A, B)\n\n#Como pedir ajuda\nAparece a resposta do que a função faz na aba de ajuda “help” Além da opção apresentada no chunck pode pedir ajuda da seguinte forma: ?função.\n\nhelp(data.frame)\n\n#Também podemos fazer operações Pode fazer operações com os número e também com os vetores com valores atribuidos. O R funciona basicamente como uma calculadora inteligente, portanto, pode ser feita operações matemáticas básicas e complexas.\n\n1 + 1\n\n[1] 2\n\n2/3\n\n[1] 0.6666667\n\n3*4\n\n[1] 12\n\nA + B\n\n[1] 3\n\nC * A\n\n[1] 3\n\nB / C\n\n[1] 0.6666667\n\n\n#Usado para confirmar a informação colocada\nA função ‘echo:false’ desativa o código de impressão (somente a resposta aparece no console).\n\n\n[1] 4"
  },
  {
    "objectID": "aula3.html",
    "href": "aula3.html",
    "title": "Aula3 - aprendendo a visualizar os dados",
    "section": "",
    "text": "Importa os dados\no conjuto de dados está em uma página da web\n\nlibrary(tidyverse)\n\ncr &lt;- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\nglimpse(cr)\n\nRows: 405\nColumns: 13\n$ farm            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ region          &lt;chr&gt; \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", …\n$ zone            &lt;chr&gt; \"Bench Maji\", \"Bench Maji\", \"Bench Maji\", \"Bench Maji\"…\n$ district        &lt;chr&gt; \"Debub Bench\", \"Debub Bench\", \"Debub Bench\", \"Debub Be…\n$ lon             &lt;dbl&gt; 35.44250, 35.44250, 35.42861, 35.42861, 35.42861, 35.3…\n$ lat             &lt;dbl&gt; 6.904722, 6.904722, 6.904444, 6.904444, 6.904444, 6.90…\n$ altitude        &lt;dbl&gt; 1100, 1342, 1434, 1100, 1400, 1342, 1432, 1100, 1400, …\n$ cultivar        &lt;chr&gt; \"Local\", \"Mixture\", \"Mixture\", \"Local\", \"Local\", \"Mixt…\n$ shade           &lt;chr&gt; \"Sun\", \"Mid shade\", \"Mid shade\", \"Sun\", \"Sun\", \"Mid sh…\n$ cropping_system &lt;chr&gt; \"Plantation\", \"Plantation\", \"Plantation\", \"Plantation\"…\n$ farm_management &lt;chr&gt; \"Unmanaged\", \"Minimal\", \"Minimal\", \"Unmanaged\", \"Unman…\n$ inc             &lt;dbl&gt; 86.70805, 51.34354, 43.20000, 76.70805, 47.15808, 51.3…\n$ sev2            &lt;dbl&gt; 55.57986, 17.90349, 8.25120, 46.10154, 12.25167, 19.91…\n\nlibrary (ggthemes)\ncr |&gt; \n  ggplot (aes (x = sev2, fill = region)) + \n  geom_histogram( color = \"white\") + \n  facet_grid(region~cultivar) + \n  scale_fill_colorblind () +\n  theme_minimal(base_size = 12)+\n  theme (legend.position = \"bottom\") +\n  labs (y= \"Frequency\", \n        x= \"Severity(%)\", fill = \"Region\")\n\n\n\n\n\n\n\nggsave(\"crl.png\", bg = \"white\")\n\nsummary(cr$inc)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9.50   19.43   32.50   34.89   48.20   86.71 \n\ncr |&gt; \n  group_by (region) |&gt; \n  summarize (sev_med = median(sev2),\n             sev_mean = mean (sev2),\n             sev_sd = sd (sev2))\n\n# A tibble: 2 × 4\n  region sev_med sev_mean sev_sd\n  &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n1 Oromia    6.23     8.06   6.82\n2 SNNPR     4.88     9.81  10.5 \n\ncr |&gt; \n  ggplot (aes (inc, sev2)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n\nVisualização\nvamos utilizar a bibilbioteca ggplot para visualizar os dados\n#cria subconjuntos uTILIZA AS FUNÇÕES “SELECT” E “FILTER” DO PACOTE dplyr para selecionar colunas e linhas, respectivamente.\n\n#filtra oromia \n\ncr_oromia &lt;- cr|&gt;\n  select (farm, region, cultivar, sev2) |&gt;\n  filter(region == \"Oromia\")\ncr_oromia\n\n# A tibble: 165 × 4\n    farm region cultivar  sev2\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;\n 1   286 Oromia Mixture   7.63\n 2   287 Oromia Mixture   9.39\n 3   288 Oromia Mixture   1.30\n 4   289 Oromia Mixture   9.79\n 5   290 Oromia Local    18.5 \n 6   291 Oromia Mixture  13.2 \n 7   292 Oromia Mixture   5.60\n 8   293 Oromia Mixture   1.06\n 9   294 Oromia Local    17.6 \n10   295 Oromia Mixture  15.4 \n# ℹ 155 more rows\n\n#filtra SNNPR\ncr_pr &lt;- cr |&gt; \n  select (farm, region, cultivar, sev2) |&gt;\n  filter (region == \"SNNPR\")\ncr_pr\n\n# A tibble: 240 × 4\n    farm region cultivar  sev2\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;\n 1     1 SNNPR  Local    55.6 \n 2     2 SNNPR  Mixture  17.9 \n 3     3 SNNPR  Mixture   8.25\n 4     4 SNNPR  Local    46.1 \n 5     5 SNNPR  Local    12.3 \n 6     6 SNNPR  Mixture  19.9 \n 7     7 SNNPR  Mixture  11.9 \n 8     8 SNNPR  Local    55.6 \n 9     9 SNNPR  Local    11.6 \n10    10 SNNPR  Mixture  11.4 \n# ℹ 230 more rows\n\n\n##Visuzaliza os subconjuntos\nGráfico ggplot para cada subconjunto\n\np1 &lt;- cr_oromia |&gt; \n  ggplot (aes(cultivar, sev2, \n              fill = cultivar))+\n  geom_boxplot()+\n  scale_fill_few () +\n  labs (y = \"Severity (%)\",\n      x= \"\")+\n  coord_flip()\n\np2 &lt;- cr_pr |&gt; \n  ggplot (aes(cultivar, sev2,\n              fill = cultivar)) +\n  geom_boxplot() +\n  scale_fill_few () +\n  labs (y= \"Severity (%)\",\n        x= \"\")+\n  coord_flip()\np1\n\n\n\n\n\n\n\np2\n\n\n\n\n\n\n\nlibrary(patchwork)\n\n(p1 / p2) + \nplot_layout(guides = \"collect\",\n            axes = \"collect\") +\n  plot_annotation(title = \"Coffe rust in Ethiopia\", \n                  caption = \"source: Del Ponte (2022)\")\n\n\n\n\n\n\n\nggsave(\"patchl.png\", bg = \"white\",\n       width = 6,\n       height = 4)\n\np3 &lt;- cr_oromia |&gt; \n  ggplot (aes(x = sev2))+\n  geom_histogram()\n\np1 + inset_element(p3, left = 0.6, bottom = 0.6, right = 1, top = 1)\n\n\n\n\n\n\n\n#se colocar a o sinal de + e a barra |, também vai. Se colocar a barra / coloca um embaixo do outro\n#usa o coord_flip para girar as coordenadas do gráfico"
  },
  {
    "objectID": "aula_04.html",
    "href": "aula_04.html",
    "title": "Aula 4 - criação de dataframe e configuração dos dados",
    "section": "",
    "text": "comp &lt;- c(9, 125, 10, 8, 132, 11, 108, 95, 108, 104, 1372, 1591, 157, 142, 159, 1654, 18, 144, 1641, 16)"
  },
  {
    "objectID": "aula_04.html#conjunto-de-dados",
    "href": "aula_04.html#conjunto-de-dados",
    "title": "Aula 4 - criação de dataframe e configuração dos dados",
    "section": "",
    "text": "comp &lt;- c(9, 125, 10, 8, 132, 11, 108, 95, 108, 104, 1372, 1591, 157, 142, 159, 1654, 18, 144, 1641, 16)"
  },
  {
    "objectID": "aula_04.html#pacotes",
    "href": "aula_04.html#pacotes",
    "title": "Aula 4 - criação de dataframe e configuração dos dados",
    "section": "Pacotes",
    "text": "Pacotes\n\nlibrary(tidyverse)\nlibrary(tibble)\nlibrary(data.table)\nlibrary(pak)\n\nColando através do comando “Data pasta” (um data frame) um conjunto de dados de uma tabela.\n\ndat &lt;- data.frame(stringsAsFactors = FALSE,\n                      trat = c(\"Mg2\",\"Mg2\",\n                               \"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\n                               \"Mg2\",\"control\",\"control\",\"control\",\"control\",\n                               \"control\",\"control\",\"control\",\"control\",\n                               \"control\",\"control\"),\n                       rep = c(1L,2L,3L,4L,\n                               5L,6L,7L,8L,9L,10L,1L,2L,3L,4L,5L,6L,\n                               7L,8L,9L,10L),\n                      comp = c(9,125,10,8,\n                               132,11,108,95,108,104,1372,1591,157,142,\n                               159,1654,18,144,1641,16))\n\n\ndat2 &lt;- tibble::tribble(\n         ~trat, ~rep, ~comp,\n         \"Mg2\",   1L,     9,\n         \"Mg2\",   2L,   125,\n         \"Mg2\",   3L,    10,\n         \"Mg2\",   4L,     8,\n         \"Mg2\",   5L,   132,\n         \"Mg2\",   6L,    11,\n         \"Mg2\",   7L,   108,\n         \"Mg2\",   8L,    95,\n         \"Mg2\",   9L,   108,\n         \"Mg2\",  10L,   104,\n     \"control\",   1L,  1372,\n     \"control\",   2L,  1591,\n     \"control\",   3L,   157,\n     \"control\",   4L,   142,\n     \"control\",   5L,   159,\n     \"control\",   6L,  1654,\n     \"control\",   7L,    18,\n     \"control\",   8L,   144,\n     \"control\",   9L,  1641,\n     \"control\",  10L,    16)"
  },
  {
    "objectID": "aula_04.html#crianto-tabelas-a-partir-de-dados",
    "href": "aula_04.html#crianto-tabelas-a-partir-de-dados",
    "title": "Aula 4 - criação de dataframe e configuração dos dados",
    "section": "Crianto tabelas a partir de dados",
    "text": "Crianto tabelas a partir de dados\nImportando tabelas da internet usando a função “addins”, “paste as tribble”.\n\nestados &lt;- tibble::tribble(\n                          ~Cidade,               ~Região,  ~Habitantes,\n             \"Brasília / Capital\",    \"Distrito Federal\",  \"2.912.000\",\n                      \"São Paulo\",           \"São Paulo\", \"12.400.000\",\n                 \"Rio de Janeiro\",      \"Rio de Janeiro\",  \"6.748.000\",\n                      \"Fortaleza\",               \"Ceará\",  \"2.669.000\",\n                 \"Belo Horizonte\",        \"Minas Gerais\",  \"2.512.000\",\n                       \"Salvador\",               \"Bahia\",  \"2.418.000\",\n                         \"Manaus\",            \"Amazonas\",  \"2.220.000\",\n                       \"Curitiba\",              \"Paraná\",  \"1.964.000\",\n                         \"Recife\",          \"Pernambuco\",  \"1.653.000\",\n                        \"Goiânia\",               \"Goiás\",  \"1.536.000\",\n                          \"Belém\",                \"Pará\",  \"1.500.000\",\n                   \"Porto Alegre\",   \"Rio Grande do Sul\",  \"1.488.000\",\n                      \"Guarulhos\",           \"São Paulo\",  \"1.292.000\",\n                       \"Campinas\",           \"São Paulo\",  \"1.139.000\",\n                       \"São Luís\",            \"Maranhão\",  \"1.041.000\",\n                         \"Maceió\",             \"Alagoas\",  \"1.018.000\",\n                          \"Natal\", \"Rio Grande do Norte\",    \"884.000\",\n                   \"Campo Grande\",  \"Mato Grosso do Sul\",    \"884.000\",\n                       \"Teresina\",               \"Piauí\",    \"815.000\",\n                    \"João Pessoa\",             \"Paraíba\",    \"806.000\",\n                        \"Aracaju\",             \"Sergipe\",    \"571.000\",\n                    \"Porto Velho\",            \"Rondônia\",    \"483.000\",\n                  \"Florianópolis\",      \"Santa Catarina\",    \"482.000\",\n                         \"Macapá\",               \"Amapá\",    \"482.000\",\n                     \"Rio Branco\",                \"Acre\",    \"309.000\",\n                         \"Palmas\",           \"Tocantins\",    \"306.000\",\n                      \"Boa Vista\",             \"Roraima\",    \"278.000\",\n                         \"Cuiabá\",         \"Mato Grosso\",    \"221.000\",\n                        \"Vitória\",      \"Espírito Santo\",    \"212.000\")\n\nDados dispostos em formato largo em 3 colunas diferentes. Para trabalharmos esses dados, é interessante que trabalhemos no formato longo, portanto, devemos adicionar todos em uma só coluna, transformando em data frame.\n\npepper &lt;- \n  tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74) \n\nPivot longer consegue transformar os dados do formato largo para o formato longo, para que possamos fazer um ggplot. Trabalhar com os dados em formato longo é muitas vezes preferível no R, especialmente ao utilizar os pacotes como tidyverse.\n\npepper |&gt; \n  pivot_longer(2:4,\n               names_to = \"Epidemic\",\n               values_to = \"inc\")\n\n# A tibble: 24 × 3\n       t Epidemic   inc\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;\n 1     0 1        0.08 \n 2     0 2        0.001\n 3     0 3        0.001\n 4     7 1        0.13 \n 5     7 2        0.01 \n 6     7 3        0.001\n 7    14 1        0.78 \n 8    14 2        0.09 \n 9    14 3        0.01 \n10    21 1        0.92 \n# ℹ 14 more rows\n\n\nCriação de gráficos de linhas com pontos. Gráficos de linhas com pontos são utilizados para visualizar dados ao longo do tempo ou outras variáveis contínuas. Eles combinam as características de gráficos de linhas e gráficos de dispersão, destacando tanto as tendências gerais quando os pontos de dados individuais.\n\npepper |&gt; \n  pivot_longer(2:4, names_to = 'epidemic', \n               values_to = 'inc') |&gt; \n  ggplot(aes(t, inc, color = epidemic)) +\n  geom_point() + \n  geom_line() + \n  annotate(geom = 'text',\n           x = 10,\n           y = 0.75,\n           label = '1') +\n  annotate(geom = 'text',\n         x = 25,\n         y = 0.75,\n         label = '2') +\n  annotate(geom = 'text',\n           x = 45,\n           y = 0.75,\n           label = '3')"
  },
  {
    "objectID": "aula_04.html#aula-04---parte-02",
    "href": "aula_04.html#aula-04---parte-02",
    "title": "Aula 4 - criação de dataframe e configuração dos dados",
    "section": "Aula 04 - Parte 02",
    "text": "Aula 04 - Parte 02\n\nlibrary(janitor)\nlibrary(ggthemes)\nlibrary(gsheet)\n\n\nImportação de dados de planilha\nFormato .csv.\n\ncr &lt;- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\ncr\n\n# A tibble: 405 × 13\n    farm region zone       district      lon   lat altitude cultivar shade    \n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;    \n 1     1 SNNPR  Bench Maji Debub Bench  35.4  6.90     1100 Local    Sun      \n 2     2 SNNPR  Bench Maji Debub Bench  35.4  6.90     1342 Mixture  Mid shade\n 3     3 SNNPR  Bench Maji Debub Bench  35.4  6.90     1434 Mixture  Mid shade\n 4     4 SNNPR  Bench Maji Debub Bench  35.4  6.90     1100 Local    Sun      \n 5     5 SNNPR  Bench Maji Debub Bench  35.4  6.90     1400 Local    Sun      \n 6     6 SNNPR  Bench Maji Debub Bench  35.4  6.90     1342 Mixture  Mid shade\n 7     7 SNNPR  Bench Maji Debub Bench  35.4  6.90     1432 Mixture  Mid shade\n 8     8 SNNPR  Bench Maji Debub Bench  35.4  6.90     1100 Local    Sun      \n 9     9 SNNPR  Bench Maji Debub Bench  35.4  6.89     1400 Local    Sun      \n10    10 SNNPR  Bench Maji Debub Bench  35.4  6.88     1342 Mixture  Mid shade\n# ℹ 395 more rows\n# ℹ 4 more variables: cropping_system &lt;chr&gt;, farm_management &lt;chr&gt;, inc &lt;dbl&gt;,\n#   sev2 &lt;dbl&gt;\n\n\nRealizando a contagem do número de observações do conjunto de dados.\n\ncr |&gt; \n  count(region, zone)\n\n# A tibble: 9 × 3\n  region zone             n\n  &lt;chr&gt;  &lt;chr&gt;        &lt;int&gt;\n1 Oromia Bale            30\n2 Oromia Ilu AbaBora     45\n3 Oromia Jimma           45\n4 Oromia West Wellega    45\n5 SNNPR  Bench Maji      45\n6 SNNPR  Gedio           45\n7 SNNPR  Keffa           45\n8 SNNPR  Sheka           45\n9 SNNPR  Sidama          60\n\n\nCriando uma tabela com tabulações cruzadas em formato data frame tibble.\n\ncr |&gt; \n  tabyl(cultivar, region)\n\n cultivar Oromia SNNPR\n Improved     23    60\n    Local     50    66\n  Mixture     92   114\n\n\nCriando gráficos de coluna. Faz o empilhamento das colunas. Padrão steck.\n\ncr |&gt; \n  count(farm_management, cultivar) |&gt; \n  ggplot(aes(cultivar, n, fill = farm_management))+\n  geom_col()\n\n\n\n\n\n\n\n\nGráfico de barras lado a lado. Alterando a posição (dodge)\n\ncr |&gt; \n  count(farm_management, cultivar) |&gt; \n  ggplot(aes(cultivar, n, fill = farm_management))+\n  geom_col(position = \"dodge\")\n\n\n\n\n\n\n\n\nAlterando as cores.\n\ncr |&gt; \n  count(farm_management, cultivar) |&gt; \n  ggplot(aes(cultivar, n, fill = farm_management))+\n  geom_col(position = \"dodge\") +\n  scale_fill_calc()+\n  facet_wrap(~cultivar, scales = \"free_x\")\n\n\n\n\n\n\n\n\nAdicionando os valores sobre as colunas do gráfico.\n\ncr |&gt; \n  count(farm_management, cultivar) |&gt; \n  ggplot(aes(cultivar, n, fill = farm_management, label = n))+\n  geom_col(position = \"dodge\") +\n  scale_fill_calc()+\n  theme_bw()+\n  theme(strip.text.x = element_blank(),\n        legend.position = \"top\")+\n  geom_text(position = position_dodge(width = 0.9))+\n  facet_wrap(~cultivar, scales = \"free_x\")\n\n\n\n\n\n\n\n\nImportando dados de planilha online.\n\nmg &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit?usp=sharing\")\nmg\n\n# A tibble: 20 × 3\n   trat      rep  comp\n   &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Mg2         1   9  \n 2 Mg2         2  12.5\n 3 Mg2         3  10  \n 4 Mg2         4   8  \n 5 Mg2         5  13.2\n 6 Mg2         6  11  \n 7 Mg2         7  10.8\n 8 Mg2         8   9.5\n 9 Mg2         9  10.8\n10 Mg2        10  10.4\n11 control     1  13.7\n12 control     2  15.9\n13 control     3  15.7\n14 control     4  14.2\n15 control     5  15.9\n16 control     6  16.5\n17 control     7  18  \n18 control     8  14.4\n19 control     9  16.4\n20 control    10  16  \n\n\nCriando gráficos de colunas com médias e desvio padrão.\n\nmg |&gt;\n  group_by(trat) |&gt; \n  summarise(mean_comp = mean(comp), sd_comp = sd(comp)) |&gt; \n  ggplot(aes(trat, mean_comp))+\n  geom_col(fill = \"steelblue\", width = 0.5)+\n  geom_errorbar(aes(ymin = mean_comp - sd_comp,\n                    ymax = mean_comp + sd_comp),\n                width = 0.1)\n\n\n\n\n\n\n\n\nPara remover a coluna do gráfico, basta isolar a linha de comando. Não é necessário manter a coluna.\n\nmg |&gt;\n  group_by(trat) |&gt; \n  summarise(mean_comp = mean(comp), sd_comp = sd(comp)) |&gt; \n  ggplot(aes(trat, mean_comp))+\n  #geom_col(fill = \"steelblue\", width = 0.5)+\n  geom_errorbar(aes(ymin = mean_comp - sd_comp,\n                    ymax = mean_comp + sd_comp),\n                width = 0.1)\n\n\n\n\n\n\n\n\n\nmg |&gt; \n  group_by(trat) |&gt; \n    summarise(mean_comp = mean(comp), \n              sd_comp = sd(comp)) |&gt; \n    ggplot(aes(trat, mean_comp)) + \n    #geom_col(fill = 'red', width = 0.5) +\n    geom_point(size = 3) +\n    ylim(5, 20) +\n    geom_errorbar(aes(ymin = mean_comp - sd_comp, \n                      ymax = mean_comp + sd_comp), \n                  width = 0.05) +\n    annotate(geom = 'text',\n           x = 1, y = 17.5,\n           label = \"*\")"
  }
]